/*
This is an example snippet - you should consider tailoring it
to your service.
*/

function fetchGraphQL(operationsDoc, operationName, variables) {
  return fetch(
    "undefined",
    {
      method: "POST",
      body: JSON.stringify({
        query: operationsDoc,
        variables: variables,
        operationName: operationName
      })
    }
  ).then((result) => result.json());
}

const operationsDoc = `
  query GeneralSchema {
    xquery {
      id
      xquery_blocknumber
      xquery_address_filter
      xquery_amount0
      xquery_amount0in
      xquery_amount0out
      xquery_amount1
      xquery_amount1in
      xquery_amount1out
      xquery_dst
      xquery_from
      xquery_owner
      xquery_query_name
      xquery_reserve0
      xquery_reserve1
      xquery_wad
      xquery_value
      xquery_tx_hash
      xquery_token1_name
      xquery_token1_symbol
      xquery_token1_decimals
      xquery_token0_symbol
      xquery_token0_name
      xquery_token0_decimals
      xquery_to
      xquery_timestamp
      xquery_src
      xquery_spender
      xquery_side
      xquery_sender
    }
  }
`;

function fetchMyQuery() {
  return fetchGraphQL(
    operationsDoc,
    "GeneralSchema",
    {}
  );
}

fetchMyQuery()
  .then(({ data, errors }) => {
    if (errors) {
      // handle those errors like a pro
      console.error(errors);
    }
    // do something great with this precious data
    console.log(data);
  })
  .catch((error) => {
    // handle errors from fetch itself
    console.error(error);
  });